# Generated by Django 5.1.4 on 2025-02-06 07:56

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('app_doc', '0001_initial'),
        ('app_struct', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Наименование', max_length=250, verbose_name='Наименование')),
                ('date', models.DateField(help_text='Дата бизнес плана', verbose_name='Дата бизнес плана')),
                ('contacts', models.TextField(blank=True, help_text='Контакты', null=True, verbose_name='Контакты')),
                ('note', models.TextField(blank=True, help_text='Примечание', null=True, verbose_name='Примечание')),
                ('actual', models.BooleanField(default=True, help_text='Актуально', verbose_name='Актуально')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Создан', verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Обновлен', verbose_name='Обновлен')),
            ],
            options={
                'verbose_name': 'Бизнес план',
                'verbose_name_plural': 'Бизнес планы',
            },
        ),
        migrations.CreateModel(
            name='BusinessPlanCostItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Статья затрат',
                'verbose_name_plural': 'Статьи затрат',
            },
        ),
        migrations.CreateModel(
            name='BusinessPlanFacility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Наименование', max_length=255, verbose_name='Наименование')),
                ('count', models.IntegerField(blank=True, help_text='Количество', null=True, verbose_name='Количество')),
                ('length', models.FloatField(blank=True, help_text='Длина', null=True, verbose_name='Длина')),
                ('square', models.FloatField(blank=True, help_text='Площадь', null=True, verbose_name='Площадь')),
            ],
            options={
                'verbose_name': 'Объект в Бизнес плане',
                'verbose_name_plural': 'Объекты в Бизнес плане',
            },
        ),
        migrations.CreateModel(
            name='ProjectStage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Наименование', max_length=255, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Этап',
                'verbose_name_plural': 'Этапы',
            },
        ),
        migrations.CreateModel(
            name='BusinessPlanStr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(blank=True, help_text='Примечание', null=True, verbose_name='Примечание')),
                ('bp', models.ForeignKey(help_text='Бизнес план', on_delete=django.db.models.deletion.CASCADE, related_name='businessplanstr', to='app_econ.businessplan', verbose_name='Бизнес план')),
                ('bpf', models.ForeignKey(help_text='Объект из Бизнес плана', on_delete=django.db.models.deletion.CASCADE, related_name='businessplanstr', to='app_econ.businessplanfacility', verbose_name='Объект из Бизнес плана')),
                ('company', models.ForeignKey(help_text='Компания', on_delete=django.db.models.deletion.CASCADE, related_name='businessplanstr', to='app_struct.company', verbose_name='Компания')),
                ('costitem', models.ForeignKey(help_text='Статья затрат', on_delete=django.db.models.deletion.CASCADE, related_name='businessplanstr', to='app_econ.businessplancostitem', verbose_name='Статья затрат')),
                ('facility', models.ForeignKey(help_text='Объект', on_delete=django.db.models.deletion.CASCADE, related_name='businessplanstr', to='app_struct.facility', verbose_name='Объект')),
                ('stage', models.ForeignKey(blank=True, help_text='Этап', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='businessplanstr', to='app_econ.projectstage', verbose_name='Этап')),
            ],
            options={
                'verbose_name': 'Строка в бизнес плане',
                'verbose_name_plural': 'Строки в бизнес плане',
            },
        ),
        migrations.CreateModel(
            name='BPTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Наименование', max_length=255, verbose_name='Наименование')),
                ('dpb', models.DateField(default=django.utils.timezone.now)),
                ('dpe', models.DateField()),
                ('note', models.TextField(blank=True, help_text='Примечание', null=True, verbose_name='Примечание')),
                ('actual', models.BooleanField(default=True, help_text='Актуально', verbose_name='Актуально')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Создан', verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Обновлен', verbose_name='Обновлен')),
                ('bps', models.ForeignKey(help_text='Строка бизнес плана', on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='app_econ.businessplanstr', verbose_name='Строка')),
            ],
            options={
                'verbose_name': 'Произодство',
                'verbose_name_plural': 'Произодства',
            },
        ),
        migrations.CreateModel(
            name='PaymentBPTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_develop', models.DateField(blank=True, null=True)),
                ('date_funding', models.DateField(blank=True, null=True)),
                ('costp', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('note', models.TextField(blank=True, help_text='Примечание', null=True, verbose_name='Примечание')),
                ('actual', models.BooleanField(default=True, help_text='Актуально', verbose_name='Актуально')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Создан', verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Обновлен', verbose_name='Обновлен')),
                ('bptask', models.ForeignKey(blank=True, help_text='Задача по бизнес плану', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bppayments', to='app_econ.bptask', verbose_name='Задача по бизнес плану')),
                ('contract', models.ForeignKey(blank=True, help_text='Договор', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bppayments', to='app_doc.contract', verbose_name='Договор')),
                ('file', models.ForeignKey(blank=True, help_text='Документ', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bppayments', to='app_doc.document', verbose_name='Документ')),
            ],
            options={
                'verbose_name': 'Планируемая оплата',
                'verbose_name_plural': 'Планируемые оплаты',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Наименование', max_length=250, verbose_name='Наименование')),
                ('contacts', models.TextField(blank=True, help_text='Контакты', null=True, verbose_name='Контакты')),
                ('note', models.TextField(blank=True, help_text='Примечание', null=True, verbose_name='Примечание')),
                ('actual', models.BooleanField(default=True, help_text='Актуально', verbose_name='Актуально')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Создан', verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Обновлен', verbose_name='Обновлен')),
                ('division', models.ForeignKey(help_text='Подразделение', on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='app_struct.division', verbose_name='Подразделение')),
                ('licenses', models.ManyToManyField(help_text='Лицензии', related_name='projects', to='app_struct.license', verbose_name='Лицензии')),
            ],
            options={
                'verbose_name': 'Проект',
                'verbose_name_plural': 'Проекты',
                'ordering': ['division', 'name'],
            },
        ),
        migrations.AddField(
            model_name='businessplanfacility',
            name='project',
            field=models.ForeignKey(help_text='Проект', on_delete=django.db.models.deletion.CASCADE, related_name='bpf', to='app_econ.project', verbose_name='Проект'),
        ),
        migrations.AddField(
            model_name='businessplan',
            name='project',
            field=models.ForeignKey(help_text='Проект', on_delete=django.db.models.deletion.CASCADE, related_name='businessplans', to='app_econ.project', verbose_name='Проект'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['division', 'name'], name='app_econ_pr_divisio_7b1002_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='project',
            unique_together={('division', 'name')},
        ),
    ]
