# Generated by Django 4.2.19 on 2025-04-22 08:43

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('app_econ', '0001_initial'),
        ('app_struct', '0001_initial'),
        ('app_doc', '0005_remove_document_comment'),
    ]

    operations = [
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('desc', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, help_text='Примечание', null=True, verbose_name='Примечание')),
                ('dt_created', models.DateField(auto_now_add=True, help_text='Создана', verbose_name='Создана')),
                ('dt_ended', models.DateField(auto_now_add=True, help_text='Завершена', verbose_name='Завершена')),
                ('importance', models.CharField(choices=[('Низкая', 'Низкая'), ('Средняя', 'Средняя'), ('Высокая', 'Высокая')], default='Средняя', max_length=50)),
                ('status', models.CharField(choices=[('Не начата', 'Не начата'), ('В работе', 'В работе'), ('Отмена', 'Отмена'), ('Завершена', 'Завершена')], max_length=50)),
                ('actual', models.BooleanField(default=True, help_text='Актуально', verbose_name='Актуально')),
                ('fact_fin_dt', models.DateField(help_text='Дата оплаты', verbose_name='Дата оплаты')),
                ('fact_fin_cost', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('fact_dev_dt', models.DateField(help_text='Дата освоения', verbose_name='Дата освоения')),
                ('fact_dev_cost', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('cost_info', models.TextField(blank=True, help_text='Примечание', null=True, verbose_name='Примечание')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_struct.company')),
                ('division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_struct.division')),
                ('documents', models.ManyToManyField(blank=True, help_text='Документы, связанные с этой задачей', related_name='tasks', to='app_doc.document')),
                ('facility', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_struct.facility')),
                ('license', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_struct.license')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_task.task')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_econ.project')),
                ('user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks_created', to='app_struct.employee')),
                ('user_ended', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks_ended', to='app_struct.employee')),
                ('user_responsible', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks_responsible', to='app_struct.employee')),
            ],
            options={
                'verbose_name': 'Задача',
                'verbose_name_plural': 'Задачи',
            },
        ),
        migrations.CreateModel(
            name='PlanDateStart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dt_start', models.DateField(help_text='Плановая дата начала', verbose_name='Плановая дата начала')),
                ('note', models.CharField(blank=True, help_text='Примечание', max_length=100, null=True, verbose_name='Примечание')),
                ('dt_created', models.DateField(auto_now_add=True, help_text='Создана', verbose_name='Создана')),
                ('actual', models.BooleanField(default=True, help_text='Актуально', verbose_name='Актуально')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='plandatestart', to='app_task.task')),
                ('user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='plandatestart', to='app_struct.employee')),
            ],
        ),
        migrations.CreateModel(
            name='PlanDateEnd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dt_end', models.DateField(help_text='Плановая дата завершения', verbose_name='Плановая дата завершения')),
                ('note', models.CharField(blank=True, help_text='Примечание', max_length=100, null=True, verbose_name='Примечание')),
                ('dt_created', models.DateField(auto_now_add=True, help_text='Создана', verbose_name='Создана')),
                ('actual', models.BooleanField(default=True, help_text='Актуально', verbose_name='Актуально')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='plandateend', to='app_task.task')),
                ('user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='plandateend', to='app_struct.employee')),
            ],
        ),
        migrations.CreateModel(
            name='PlanCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_fin_dt', models.DateField(help_text='Плановая дата оплаты', verbose_name='Плановая дата оплаты')),
                ('plan_fin_cost', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('plan_dev_dt', models.DateField(help_text='Плановая дата освоения', verbose_name='Плановая дата освоения')),
                ('plan_dev_cost', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('nds_bool', models.BooleanField(default=True, help_text='НДС', verbose_name='НДС')),
                ('ndfl_bool', models.BooleanField(default=True, help_text='НДФЛ', verbose_name='НДФЛ')),
                ('nds', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('ndfl', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='plancost', to='app_task.task')),
            ],
        ),
    ]
