# Generated by Django 5.1.4 on 2025-02-06 07:56

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FacilityType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Тип объекта', max_length=255, unique=True, verbose_name='Тип объекта')),
            ],
            options={
                'verbose_name': 'Тип объекта',
                'verbose_name_plural': 'Типы объектов',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Наименование', max_length=250, unique=True, verbose_name='Наименование')),
                ('name', models.CharField(help_text='Полное наименование', max_length=250, verbose_name='Полное наименование')),
                ('logo', models.ImageField(blank=True, help_text='Логотип', null=True, upload_to='struct/company/logo/', verbose_name='Логотип')),
                ('contacts', models.TextField(blank=True, help_text='Контакты', null=True, verbose_name='Контакты')),
                ('note', models.TextField(blank=True, help_text='Примечание', null=True, verbose_name='Примечание')),
                ('actual', models.BooleanField(default=True, help_text='Актуальна', verbose_name='Актуальна')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Создан', verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Обновлен', verbose_name='Обновлен')),
                ('gis', models.CharField(blank=True, help_text='GIS ID', max_length=255, null=True, verbose_name='GIS ID')),
                ('parent', models.ForeignKey(blank=True, help_text='Головная компания', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subcompany', to='app_struct.company', verbose_name='Головная')),
            ],
            options={
                'verbose_name': 'Компания',
                'verbose_name_plural': 'Компании',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Наименование', max_length=250, verbose_name='Наименование')),
                ('abbr', models.CharField(help_text='Аббревиатура', max_length=17, verbose_name='Аббревиатура')),
                ('contacts', models.TextField(blank=True, help_text='Контакты', null=True, verbose_name='Контакты')),
                ('note', models.TextField(blank=True, help_text='Примечание', null=True, verbose_name='Примечание')),
                ('actual', models.BooleanField(default=True, help_text='Актуально', verbose_name='Актуально')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Создан', verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Обновлен', verbose_name='Обновлен')),
                ('company', models.ForeignKey(help_text='Компания', on_delete=django.db.models.deletion.CASCADE, related_name='divisions', to='app_struct.company', verbose_name='Компания')),
                ('parent', models.ForeignKey(blank=True, help_text='Руководящее подразделение', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subdivisions', to='app_struct.division', verbose_name='Руководящее')),
            ],
            options={
                'verbose_name': 'Подразделение',
                'verbose_name_plural': 'Подразделения',
                'ordering': ['company', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Имя', max_length=250, verbose_name='Имя')),
                ('surname', models.CharField(help_text='Фамилия', max_length=250, verbose_name='Фамилия')),
                ('patronymic', models.CharField(blank=True, help_text='Отчество', max_length=250, null=True, verbose_name='Отчество')),
                ('post', models.CharField(help_text='Должность', max_length=250, verbose_name='Должность')),
                ('phone', models.CharField(help_text='Телефон', max_length=250, verbose_name='Телефон')),
                ('email', models.EmailField(blank=True, help_text='Электронная почта', max_length=250, null=True, verbose_name='Почта')),
                ('avatar', models.ImageField(blank=True, help_text='Аватар', null=True, upload_to='struct/employee/ava/', verbose_name='Аватар')),
                ('is_director', models.BooleanField(default=False, help_text='Руководитель', verbose_name='Руководитель')),
                ('date_birth', models.DateField(blank=True, help_text='Дата рождения', null=True, verbose_name='Дата рождения')),
                ('contacts', models.TextField(blank=True, help_text='Контактная информация', null=True, verbose_name='Контакт')),
                ('note', models.TextField(blank=True, help_text='Примечание', null=True, verbose_name='Примечание')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Создан', verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Обновлен', verbose_name='Обновлен')),
                ('company', models.ForeignKey(help_text='Компания', on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='app_struct.company', verbose_name='Компания')),
                ('division', models.ForeignKey(blank=True, help_text='Подразделение', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='app_struct.division', verbose_name='Подразделение')),
                ('user', models.OneToOneField(blank=True, help_text='Пользователь системы', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Сотрудник',
                'verbose_name_plural': 'Сотрудники',
                'ordering': ['surname', 'name', 'patronymic'],
            },
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Наименование', max_length=250, unique=True, verbose_name='Наименование')),
                ('dt_start', models.DateField(help_text='Начало', verbose_name='Начало')),
                ('dt_end', models.DateField(help_text='Окончание', verbose_name='Окончание')),
                ('doc', models.FileField(blank=True, help_text='Файл лицензии', null=True, upload_to='doc/license/', verbose_name='Лицензия')),
                ('note', models.TextField(blank=True, help_text='Примечание', null=True, verbose_name='Примечание')),
                ('actual', models.BooleanField(default=True, help_text='Актуально', verbose_name='Актуально')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Создан', verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Обновлен', verbose_name='Обновлен')),
                ('gis', models.CharField(blank=True, help_text='GIS ID', max_length=255, null=True, verbose_name='GIS ID')),
                ('owner', models.ForeignKey(blank=True, help_text='Владелец', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='licenses', to='app_struct.company', verbose_name='Владелец')),
            ],
            options={
                'verbose_name': 'Лицензия',
                'verbose_name_plural': 'Лицензии',
                'ordering': ['owner', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Наименование', max_length=255, verbose_name='Наименование')),
                ('count', models.FloatField(blank=True, help_text='Количество', null=True, verbose_name='Количество')),
                ('length', models.FloatField(blank=True, help_text='Протяженность', null=True, verbose_name='Протяженность')),
                ('square', models.FloatField(blank=True, help_text='Площадь', null=True, verbose_name='Площадь')),
                ('note', models.TextField(blank=True, help_text='Примечание', null=True, verbose_name='Примечание')),
                ('actual', models.BooleanField(default=True, help_text='Актуально', verbose_name='Актуально')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Создан', verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Обновлен', verbose_name='Обновлен')),
                ('gis', models.CharField(blank=True, help_text='GIS ID', null=True, verbose_name='GIS ID')),
                ('gist', models.CharField(blank=True, help_text='Таблица в GIS', null=True, verbose_name='Таблица в GIS')),
                ('parent', models.ForeignKey(blank=True, help_text='Основной объект', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='facilities', to='app_struct.facility', verbose_name='Основной объект')),
                ('type', models.ForeignKey(blank=True, help_text='Тип объекта', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='facilities', to='app_struct.facilitytype', verbose_name='Тип объекта')),
                ('license', models.ForeignKey(blank=True, help_text='Лицензия', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='facilities', to='app_struct.license', verbose_name='Лицензия')),
            ],
            options={
                'verbose_name': 'Объект',
                'verbose_name_plural': 'Объекты',
                'ordering': ['license', 'name'],
            },
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['title'], name='app_struct__title_2b80c0_idx'),
        ),
        migrations.AddIndex(
            model_name='division',
            index=models.Index(fields=['name'], name='app_struct__name_28d021_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='division',
            unique_together={('company', 'abbr'), ('company', 'name')},
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['surname'], name='app_struct__surname_45b931_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='employee',
            unique_together={('surname', 'name', 'patronymic', 'company', 'post')},
        ),
        migrations.AddIndex(
            model_name='license',
            index=models.Index(fields=['name'], name='app_struct__name_9c31e5_idx'),
        ),
        migrations.AddIndex(
            model_name='facility',
            index=models.Index(fields=['name'], name='app_struct__name_08f878_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='facility',
            unique_together={('license', 'parent', 'name')},
        ),
    ]
